<html>

<head>
<title>Cluster : command line</title>
<meta name="author" content="Petra Budde, Raymond Nijmeijer">
<meta name="keywords" content="Cluster, MapCluster">
<link rel=stylesheet type="text/css" href="../ilwis.css">
<SCRIPT TYPE="text/javascript"> 
 <!-- 
 function popup(mylink, windowname) 
 { 
 if (! window.focus)return true; 
 var href; 
 if (typeof(mylink) == 'string') 
    href=mylink; 
 else 
   href=mylink.href; 
window.open(href, windowname, 'width=500,height=400,scrollbars=yes'); 

return false;
}
//-->
</SCRIPT>
</head>
<body text="#000000" bgcolor="#FFFFFF">

<h1 class=firstline>Cluster</h1>

<h1 class=secondline>Command line</h1>

<!--<hr>-->

<p class=defnewpar>The <a href="..//ilwisapp/popup/cluster_popup.htm" onClick="return popup(this, 'notes')" >Cluster</a> operation can directly be executed by typing one of the following expressions on the command line of the Main Window:</p>

<p class=emptyline>&nbsp;&nbsp; </p>

<table class=syntax cellspacing=0>
<tr>
<td valign="top" width=68>
<p class=calccommline>OUTMAP</p>

</td>
<td valign="top" width=18>
<p class=calccommline>=</p>

</td>
<td valign="top">
<p class=calccommline><span class=courier>MapCluster</span>(InputMapList, <i>nr of clusters</i>)</p>

</td>
</tr>
<tr>
<td valign="top" width=68>
<p class=calccommline>OUTMAP</p>

</td>
<td valign="top" width=18>
<p class=calccommline>=</p>

</td>
<td valign="top">
<p class=calccommline><span class=courier>MapCluster</span>(InputMapList, <i>nr of clusters</i>, OutputAttribTable)</p>

</td>
</tr>
</table>

<p class=defnewpar>where:</p>

<table cellspacing=0>
<tr>
<td valign="top" width=108>
<p>OUTMAP</p>

</td>
<td valign="top">
<p>is the name of the output map.</p>

</td>
</tr>
<tr>
<td valign="top" width=108>
<p class=courier>MapCluster</p>

</td>
<td valign="top">
<p>is the command to start the Cluster operation.</p>

</td>
</tr>
<tr>
<td valign="top" width=108>
<p>InputMapList</p>

</td>
<td valign="top">
<p>is the name of an existing maplist which contains 1 up to 4 raster maps with the <span class=courier>Image</span> domain. </p>

<p>If you like you can also define a map list on the fly as: </p>

<p class=leftmargin06><span class=courier>mlist</span>(<i>map1, map2, ...</i>) </p>

<p>where <span class=courier>mlist</span> is fixed syntax to define a temporary map list without name, and </p>

<p>where <i>map1, map2</i> etc. are the names of the raster maps that should be part of the map list. </p>

</td>
</tr>
<tr>
<td valign="top" width=108>
<p><i>nr of clusters</i></p>

</td>
<td valign="top">
<p>is an integer value for the number of clusters/spectral classes you want to obtain in the output map; number of clusters between 2 and 60. </p>

</td>
</tr>
<tr>
<td valign="top" width=108>
<p>OutputAttribTable</p>

</td>
<td valign="top">
<p>is the name of an attribute table for the output map containing statistical information on the clusters (optional parameter). </p>

</td>
</tr>
</table>

<p class=defnewpar>When the definition symbol = is used, a <a href="..//ilwis/popup/object_dependent_data_objects_popup.htm" onClick="return popup(this, 'notes')" >dependent output map</a> is created; when the assignment symbol := is used, the dependency link is immediately broken after the output map has been calculated. Furthermore, cluster names for the output map and optional attribute table are stored by the output map (<a href="..//ilwis/popup/objects_internal_domains_popup.htm" onClick="return popup(this, 'notes')" >internal class domain</a>).</p>

<p class=Seealso>See also:</p>

<p class=seealsolinks><a href="cluster_functionality.htm">Cluster : functionality</a></p>

</body
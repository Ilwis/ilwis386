<html>

<head>
<title>filter shrink4 sec</title>
<meta name="author" content="Petra Budde, Raymond Nijmeijer">
<link rel=stylesheet type="text/css" href="../../ilwis.css">
<SCRIPT TYPE="text/javascript"> 
 <!-- 
 function popup(mylink, windowname) 
 { 
 if (! window.focus)return true; 
 var href; 
 if (typeof(mylink) == 'string') 
    href=mylink; 
 else 
   href=mylink.href; 
window.open(href, windowname, 'width=500,height=400,scrollbars=yes'); 

return false;
}
//-->
</SCRIPT>
</head>
<body text="#000000" bgcolor="#FFFFFF">

<p class=popuptitle>SHRINK4  filter</p>

<p>The SHRINK4 filter is a standard <a href="../popup/filter_binary_filter_popup.htm">binary filter</a> which works in a 3x3 environment. </p>

<p class=defnewpar>The SHRINK4 filter assigns a 1 to a true center pixel only when all four horizontal and vertical neighbours are true as well. When one or more horizontal or vertical neighbours are 0, a 0 is assigned. When the center pixel is zero, it always remains zero. </p>

<p class=defnewpar>The result of using the SHRINK4 filter is that areas of true pixels 'shrink' along their edges; single lines of true pixels and single true pixels totally surrounded by false pixels disappear. </p>

<p class=emptyline>&nbsp;&nbsp; </p>

<table cellspacing=0>
<tr>
<td valign="top" width=226>
<p>Input:</p>

</td>
<td valign="top" width=226>
<p>Output:</p>

</td>
</tr>
<tr>
<td valign="top" width=226>
<p class=linespacing01before><img src="../../images/inputf.gif" align=bottom width="200" height="200"></p>

</td>
<td valign="top" width=226>
<p class=linespacing01before><img src="../../images/shr4.gif" align=bottom width="200" height="200"></p>

</td>
</tr>
</table>

<p class=kopje>Example:</p>

<p>When the center pixel is true and all horizontal and vertical neighbours are true:</p>

<p class=emptylinehalf>&nbsp;&nbsp;</p>

<table cellspacing=0>
<tr>
<td valign="top" width=22>
<p class=filtcour></p>

</td>
<td valign="top" width=30>
<p class=filtcour>0</p>

</td>
<td valign="top" width=30>
<p class=filtcour>1</p>

</td>
<td valign="top" width=30>
<p class=filtcour>0</p>

</td>
</tr>
<tr>
<td valign="top" width=22>
<p class=filtcour></p>

</td>
<td valign="top" width=30>
<p class=filtcour>1</p>

</td>
<td valign="top" width=30>
<p class=filtcour>1</p>

</td>
<td valign="top" width=30>
<p class=filtcour>1</p>

</td>
</tr>
<tr>
<td valign="top" width=22>
<p class=filtcour></p>

</td>
<td valign="top" width=30>
<p class=filtcour>0</p>

</td>
<td valign="top" width=30>
<p class=filtcour>1</p>

</td>
<td valign="top" width=30>
<p class=filtcour>0</p>

</td>
</tr>
</table>

<p class=linespacing03before>a binary filter orders these values as below (bit position) where 0 means the last position, 1 the one but last position, etc.:</p>

<p class=emptylinehalf>&nbsp;&nbsp;</p>

<table cellspacing=0>
<tr>
<td valign="top" width=22>
<p class=filtcour></p>

</td>
<td valign="top" width=30>
<p class=filtcour>5</p>

</td>
<td valign="top" width=30>
<p class=filtcour>6</p>

</td>
<td valign="top" width=30>
<p class=filtcour>7</p>

</td>
</tr>
<tr>
<td valign="top" width=22>
<p class=filtcour></p>

</td>
<td valign="top" width=30>
<p class=filtcour>4</p>

</td>
<td valign="top" width=30>
<p class=filtcour>8</p>

</td>
<td valign="top" width=30>
<p class=filtcour>0</p>

</td>
</tr>
<tr>
<td valign="top" width=22>
<p class=filtcour></p>

</td>
<td valign="top" width=30>
<p class=filtcour>3</p>

</td>
<td valign="top" width=30>
<p class=filtcour>2</p>

</td>
<td valign="top" width=30>
<p class=filtcour>1</p>

</td>
</tr>
</table>

<p class=emptylinehalf>&nbsp;&nbsp;</p>

<p>This results in the following binary number: <span class=courier>101010101</span></p>

<p class=defnewpar>(this binary number is equivalent to: 2 to the power 8 + 2 to the power 6 + 2 to the power 4 + 2 to the power 2 + 2 to the power 0 =  256 + 64 + 16 + 4 + 1 = 341)</p>

<p class=defnewpar>The answer is looked up in the table which is built in in the binary filter itself. In case of the SHRINK4 filter the output value is 1. </p>

<p>When looked up in the table of the SHRINK8 filter (this filter only assigns a 1 when all neighbours are true as well), the output value is 0.</p>

<p class=Seealso>See also:</p>

<p class=seealsolinks><a href="..//ilwisapp/filters_types_binary_filters.htm" onClick="return popup(this, 'notes')" >Filter types : binary filters</a></p>

</body
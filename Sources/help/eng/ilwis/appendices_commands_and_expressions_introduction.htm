<html>

<head>
<title>Appendices : commands and expressions (introduction)</title>
<meta name="author" content="Petra Budde, Raymond Nijmeijer">
<meta name="keywords" content="Commands and expressions, Appendices">
<link rel=stylesheet type="text/css" href="../ilwis.css">
<SCRIPT TYPE="text/javascript"> 
 <!-- 
 function popup(mylink, windowname) 
 { 
 if (! window.focus)return true; 
 var href; 
 if (typeof(mylink) == 'string') 
    href=mylink; 
 else 
   href=mylink.href; 
window.open(href, windowname, 'width=500,height=400,scrollbars=yes'); 

return false;
}
//-->
</SCRIPT>
</head>
<body text="#000000" bgcolor="#FFFFFF">

<h1 class=firstline>Appendices</h1>

<h1 class=secondline>Commands and expressions (introduction)</h1>

<!--<hr>-->

<p class=defnewpar>The <a href="..//ilwis/popup/command_line_main_window_popup.htm" onClick="return popup(this, 'notes')" >ILWIS command line in the Main window</a> is not used only for map calculations. In fact, you might say that the command line steers ILWIS by telling ILWIS what to do. For example, when you fill out the dialog box of an operation, this is translated into command line syntax which is then executed. All actions which are, internally, carried out via the command line are recorded and can be found in the ILWIS.LOG file. </p>

<p class=defnewpar>In the next topics, it is described how the command line can be used for various tasks: opening dialog boxes, opening objects, performing complete operations by using the command line syntax for an operation, to run a script, etc. </p>

<p class=defnewpar>By typing an <a href="..//ilwis/popup/command_line_main_commands_popup.htm" onClick="return popup(this, 'notes')" >ILWIS command</a>, usually a dialog box will appear which requires further user-interaction before the command can be carried out. </p>

<p class=defnewpar>By typing an <a href="..//ilwis/popup/command_line_main_expressions_popup.htm" onClick="return popup(this, 'notes')" >ILWIS expression</a>, you can perform a <a href="..//ilwis/popup/y_calculation_popup.htm" onClick="return popup(this, 'notes')" >calculation</a> or another <a href="..//ilwis/popup/y_operation_popup.htm" onClick="return popup(this, 'notes')" >operation</a>. To calculate with raster maps, type a MapCalc formula. To perform an operation, type a complete expression that includes all parameters required by that operation; the operation's dialog box will be skipped. </p>

<p class=defnewpar>To perform automated tasks, you can use a <a href="..//ilwis/popup/objects_script_popup.htm" onClick="return popup(this, 'notes')" >script</a>. All MapCalc expressions are allowed as well as all expressions for operations. For TabCalc a special syntax exists. Furthermore, there is extra syntax for tasks which are not pure calculations or operations. This is described in the topic <a href="../ilwis/appendices_ilwis_scripts_language_syntax.htm">ILWIS script language (syntax)</a>. </p>

<p class=defnewpar>Finally, when you are interested in building a dedicated application in Visual Basic, Java, etc. which will run on top of ILWIS, you may wish to investigate the DDE topic in which describes how you can use ILWIS as a DDE server. </p>

<p class=defnewpar>In the next topics, overviews are presented of: </p>

<ul>

<li><a href="appendices_ilwis_commands.htm">ILWIS commands</a> </li>

<li><a href="appendices_ilwis_expressions.htm">ILWIS expressions</a> </li>

<li><a href="../ilwis/appendices_ilwis_scripts_language_syntax.htm">ILWIS script language (syntax)</a> </li>

<li><a href="../ilwis/appendices_ilwis_as_dde_server.htm">ILWIS as DDE server</a></li>

</ul>

</body
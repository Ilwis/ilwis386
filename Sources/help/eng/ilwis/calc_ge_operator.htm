<html>

<head>
<title>&gt;=</title>
<meta name="author" content="Petra Budde, Raymond Nijmeijer">
<meta name="keywords" content="&gt; operator, GE operator, Relational operators">
<link rel=stylesheet type="text/css" href="../ilwis.css">
<SCRIPT TYPE="text/javascript"> 
 <!-- 
 function popup(mylink, windowname) 
 { 
 if (! window.focus)return true; 
 var href; 
 if (typeof(mylink) == 'string') 
    href=mylink; 
 else 
   href=mylink.href; 
window.open(href, windowname, 'width=500,height=400,scrollbars=yes'); 

return false;
}
//-->
</SCRIPT>
</head>

<body text="#000000" bgcolor="#FFFFFF">

<h1 class=firstline>Map and Table Calculation</h1>
<h1 class=secondline>&gt;= or GE operator</h1>

<p>Tests whether the outcome of <i>a</i> is greater than or equal to the outcome of <i>b</i>, i.e.
<i> a</i> &gt;= <i>b</i>. Instead of using the <span class=courier>&gt;=</span> sign, you may also use <span class=courier>ge</span>.</p>

<p class=calctitlesyntax>Syntax</p>
<p class=syntax><i>a</i> <span class=courier>&gt;=</span> <i> b</i><br>
<i>a</i> <span class=courier>ge</span> <i>b</i></p>

<p class=calctitle>Input</p>
<table cellspacing=0>
<tr>
	<td width="100" valign="top"><i>a</i></td>
	<td valign="top">is a value</td>
</tr>
<tr>
	<td width="100" valign="top">Domain type:</td>
	<td valign="top">any <a href="..//ilwis/sec/domain_type_value_sec.htm" onClick="return popup(this, 'notes')" >Value</a> domain</td>
</tr>
<tr>
	<td width="100" valign="top"><i>b</i></td>
	<td valign="top">is a value</td>
</tr>
<tr>
	<td width="100" valign="top">Domain type:</td>
	<td valign="top">any <a href="..//ilwis/sec/domain_type_value_sec.htm" onClick="return popup(this, 'notes')" >Value</a> domain</td>
</tr>
</table>

<p class=calctitle>Output</p>
<table cellspacing=0>
<tr>
	<td width="100" valign="top"><span class=courier>&gt;=</span> returns:</td>
	<td valign="top">a boolean value, i.e. True, False or undefined</td>
</tr>
<tr>
	<td width="100" valign="top">Domain:</td>
	<td valign="top"><a href="..//ilwis/popup/yy_system_domain_bool_popup.htm" onClick="return popup(this, 'notes')" >system domain <span class=courier>Bool</span></a></td>
</tr>
</table>

<p class=tip>Notes:</p>
<ul class=tipul>
	<li>The operator may be written as a symbols (<span class=courier>&gt;=</span>) or as letters (<span class=courier>ge</span>). When using the symbol it does not matter whether you type spaces around the operator or not. When using the letters, e.g. in scripts, spaces are required on both sides of the operator.</li>
	<li><span class=courier>&gt;=</span> is the opposite of <span class=courier>&lt;</span>.</li>
	<li>When one of the operands is undefined, or when both operands are undefined, the output will also be undefined.</li>
</ul>

<p class=tip>Tips:</p>
<ul class=tipul>
	<li>Relational operators are often used in combination with a <a href="calc_iff.htm">conditional <span class=courier>IFF</span> function</a>.</li>
	<li> To test whether values are within a certain range, e.g. greater than 2 but less than 8, the <a href="calc_inrange.htm"><span class=courier>INRANGE</span> function</a> can be used.</li>
	<li>When the definition symbol = is used, a <a href="..//ilwis/popup/object_dependent_data_objects_popup.htm" onClick="return popup(this, 'notes')" >dependent output map</a> or <a href="..//ilwis/popup/object_dependent_data_objects_popup.htm" onClick="return popup(this, 'notes')" >dependent output column</a> is created; when the assignment symbol := is used, the dependency link is immediately broken after the output map/column has been calculated.</li>
</ul>

<p class=calctitle>Usable in</p>
<p><a href="..//ilwis/popup/map_calculation_popup.htm" onClick="return popup(this, 'notes')" >MapCalc</a>, <a href="..//ilwis/popup/table_calculation_popup.htm" onClick="return popup(this, 'notes')" >TabCalc</a>, <a href="..//ilwis/popup/command_line_pocket_calculator_popup.htm" onClick="return popup(this, 'notes')" >Simple calculators</a></p>

<p class=calctitle>Examples</p>

<p class=kopjeaftertitlesub>Pocket line calculator examples:</p>
<table cellspacing=0>
<tr>
	<td width="100"><p class=calc00>? 10 &gt;= 20</p></td>
	<td><p>returns False</p></td>
</tr>
<tr>
	<td width="100"><p class=calc00>? 10 ge 20</p></td>
	<td><p>returns False</p></td>
</tr>
<tr>
	<td width="100"><p class=calc00>? 10 &gt;= -20</p>
	<td><p>returns True</p></td>
</tr>
</table>

<p class=kopje>MapCalc example:</p>
<p class=calc00>OutMap = InMap &gt;= 20</p>
<p class=emptyline>&nbsp;</p>
<table>
<tr>
	<td><p class=courier>InMap</p></td>
	<td><p class=courier>OutMap</p></td>
</tr>
<tr>
<td>
<table class=calcpict cellspacing="0" cellpadding="0">
  <tr>
    <td class=calcpict>50</td>
    <td class=calcpict>45</td>
    <td class=calcpict>-40</td>
  </tr>
  <tr>
    <td class=calcpict>40</td>
    <td class=calcpict>0</td>
    <td class=calcpict>15</td>
  </tr>
  <tr>
    <td class=calcpict>?</td>
    <td class=calcpict>10</td>
    <td class=calcpict>20</td>
  </tr>
</table>
</td>
<td>
<table class=calcpict cellspacing="0" cellpadding="0">
  <tr>
    <td class=calcpict>True</td>
    <td class=calcpict>True</td>
    <td class=calcpict>False</td>
  </tr>
  <tr>
    <td class=calcpict>True</td>
    <td class=calcpict>False</td>
    <td class=calcpict>False</td>
  </tr>
  <tr>
    <td class=calcpict>?</td>
    <td class=calcpict>False</td>
    <td class=calcpict>True</td>
  </tr>
</table>
</td>
</tr>
</table>

<p class=kopje>TabCalc example:</p>
<p class=calc00>OutCol = InCol &gt;= 20</p>
<p class=emptyline>&nbsp;</p>
<table cellspacing=0>
<tr>
	<td valign="top"><p class=tcolhr>InCol</p></td>
	<td valign="top"><p class=tcolh>OutCol</p></td>
</tr>
<tr>
	<td valign="top"><p class=t1r>50</p></td>
	<td valign="top"><p class=t1>True</p></td>
</tr>
<tr>
	<td valign="top"><p class=t1r>45</p></td>
	<td valign="top"><p class=t1>True</p></td>
</tr>
<tr>
	<td valign="top"><p class=t1r>-40</p></td>
	<td valign="top"><p class=t1>False</p></td>
</tr>
<tr>
	<td valign="top"><p class=t1r>40</p></td>
	<td valign="top"><p class=t1>True</p></td>
</tr>
<tr>
	<td valign="top"><p class=t1r>0</p></td>
	<td valign="top"><p class=t1>False</p></td>
</tr>
<tr>
	<td valign="top"><p class=t1r>15</p></td>
	<td valign="top"><p class=t1>False</p></td>
</tr>
<tr>
	<td valign="top"><p class=t1r>?</p></td>
	<td valign="top"><p class=t1>?</p></td>
</tr>
<tr>
	<td valign="top"><p class=t1r>10</p></td>
	<td valign="top"><p class=t1>False</p></td>
</tr>
<tr>
	<td valign="top"><p class=t1r>20</p></td>
	<td valign="top"><p class=t1>True</p></td>
</tr>
</table>

<p class=Seealso>See also:</p>
<table cellspacing=0>
<tr>
	<td valign="top" width="50"><a href="calc_eq_operator.htm">=</a></td>
	<td valign="top"><a href="calc_le_operator.htm">&lt;=</a></td>
</tr>
<tr>
	<td valign="top" width="50"><a href="calc_ne_operator.htm">&lt;&gt;</a></td>
	<td valign="top"><a href="calc_gt_operator.htm">&gt;</a></td>
</tr>
<tr>
	<td valign="top" width="50"><p class=seealsolinks><a href="calc_lt_operator.htm">&lt;</a></p></td>
	<td valign="top"><p class=seealsolinks></p></td>
</tr>
</table>

</body
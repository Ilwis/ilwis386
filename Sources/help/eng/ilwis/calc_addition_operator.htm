<html>

<head>
<title>+</title>
<meta name="author" content="Petra Budde, Raymond Nijmeijer">
<meta name="keywords" content="+ operator, Addition operator, Arithmetic operators">
<link rel=stylesheet type="text/css" href="../ilwis.css">
<SCRIPT TYPE="text/javascript"> 
 <!-- 
 function popup(mylink, windowname) 
 { 
 if (! window.focus)return true; 
 var href; 
 if (typeof(mylink) == 'string') 
    href=mylink; 
 else 
   href=mylink.href; 
window.open(href, windowname, 'width=500,height=400,scrollbars=yes'); 

return false;
}
//-->
</SCRIPT>
</head>

<body text="#000000" bgcolor="#FFFFFF">

<h1 class=firstline>Map and Table Calculation</h1>
<h1 class=secondline>+ operator</h1>

<p class=defnewpar>The addition operator adds two values or concatenates two strings, i.e. <i> a</i> <span class=courier>+</span> <i>b</i>.&nbsp;</p>

<p class=calctitlesyntax>Syntax</p>
<p class=syntax><i>a</i> <span class=courier>+</span> <i>b</i></p>

<p class=calctitle>Input</p>
<p>When used on values:</p>
<table cellspacing=0>
<tr>
	<td width="100" valign="top"><i>a</i></td>
	<td valign="top">is a value</td>
</tr>
<tr>
	<td width="100" valign="top">Domain type:</td>
	<td valign="top">any <a href="..//ilwis/sec/domain_type_value_sec.htm" onClick="return popup(this, 'notes')" >Value</a> domain</td>
</tr>
<tr>
	<td width="100" valign="top"><i>b</i></td>
	<td valign="top">is a value</td>
</tr>
<tr>
	<td width="100" valign="top">Domain type:</td>
	<td valign="top">any <a href="..//ilwis/sec/domain_type_value_sec.htm" onClick="return popup(this, 'notes')" >Value</a> domain</td>
</tr>
</table>

<p class=defnewpar>When used on strings:</p>
<table cellspacing=0>
<tr>
	<td width="100" valign="top"><i>a</i></td>
	<td valign="top">is an item of a class or ID domain or a string</td>
</tr>
<tr>
	<td width="100" valign="top">Domain type:</td>
	<td valign="top">any <a href="..//ilwis/sec/domain_class_sec.htm" onClick="return popup(this, 'notes')" >Class</a>, <a href="..//ilwis/sec/domain_type_id_sec.htm" onClick="return popup(this, 'notes')" >ID</a> or <a href="..//ilwis/sec/domain_type_string_sec.htm" onClick="return popup(this, 'notes')" >String</a> domain</td>
</tr>
<tr>
	<td width="100" valign="top"><i>b</i></td>
	<td valign="top">is an item of a class or ID domain or a string</td>
</tr>
<tr>
	<td width="100" valign="top">Domain type:</td>
	<td valign="top">any <a href="..//ilwis/sec/domain_class_sec.htm" onClick="return popup(this, 'notes')" >Class</a>, <a href="..//ilwis/sec/domain_type_id_sec.htm" onClick="return popup(this, 'notes')" >ID</a> or <a href="..//ilwis/sec/domain_type_string_sec.htm" onClick="return popup(this, 'notes')" >String</a> domain</td>
</tr>
</table>

<p class=calctitle>Output</p>
<p>When used on values:</p>
<table cellspacing=0>
<tr>
	<td width="100" valign="top"><span class=courier>+</span> returns:</td>
	<td valign="top">a real value</td>
</tr>
<tr>
	<td width="100" valign="top">Domain:</td>
	<td valign="top"><a href="..//ilwis/popup/yy_system_domain_value_popup.htm" onClick="return popup(this, 'notes')" >system domain <span class=courier>Value</span></a></td>
</tr>
</table>

<p class=defnewpar>When used on strings:</p>
<table cellspacing=0>
<tr>
	<td width="100" valign="top"><span class=courier>+</span> returns:</td>
	<td valign="top">a string</td>
</tr>
<tr>
	<td width="100" valign="top">Domain:</td>
	<td valign="top"><a href="..//ilwis/popup/yy_system_domain_string_popup.htm" onClick="return popup(this, 'notes')" >system domain <span class=courier>String</span></a></td>
</tr>
</table>

<p class=tip>Notes:</p>
<ul class=tipul>
	<li>When the + operator is used on strings two strings will be glued together. This is also known as <a href="#Applied example">concatenation</a>.</li>
	<li>When one of the operands is undefined, or when both operands are undefined, the output will also be undefined.</li>
</ul>

<p class=tip>Tip:</p>
<p class=tiptext>When the definition symbol = is used, a <a href="..//ilwis/popup/object_dependent_data_objects_popup.htm" onClick="return popup(this, 'notes')" >dependent output map</a> or <a href="..//ilwis/popup/object_dependent_data_objects_popup.htm" onClick="return popup(this, 'notes')" >dependent output column</a> is created; when the assignment symbol := is used, the dependency link is immediately broken after the output map/column has been calculated.</p>

<p class=calctitle>Usable in</p>
<p><a href="..//ilwis/popup/map_calculation_popup.htm" onClick="return popup(this, 'notes')" >MapCalc</a>, <a href="..//ilwis/popup/table_calculation_popup.htm" onClick="return popup(this, 'notes')" >TabCalc</a>, <a href="..//ilwis/popup/command_line_pocket_calculator_popup.htm" onClick="return popup(this, 'notes')" >Simple calculators</a></p>

<p class=calctitle>Examples</p>

<p class=kopjeaftertitlesub>Pocket line calculator examples:</p>
<table cellspacing=0>
<tr>
	<td width="120"><p class=calc00>? 10+2</p></td>
	<td><p>returns 12</p></td>
</tr>
<tr>
	<td width="120"><p class=calc00>? 2^3+4</p></td>
	<td><p>returns 12.000</p></td>
</tr>
<tr>
	<td width="120"><p class=calc00>? &quot;My&quot;+&quot;String&quot;</p></td>
	<td><p>returns MyString</p></td>
</tr>
</table>

<p class=kopje>MapCalc example:</p>
<p class=calc00>OutMap = InMapA + InMapB</p>
<p class=emptyline>&nbsp;</p>
<table>
<tr>
	<td><p class=courier>InMapA</p></td>
	<td><p class=courier>InMapB</p></td>
	<td><p class=courier>OutMap</p></td>
</tr>
<tr>
<td>
<table class=calcpict cellspacing="0" cellpadding="0">
  <tr>
    <td class=calcpict>10</td>
    <td class=calcpict>20</td>
    <td class=calcpict>30</td>
  </tr>
  <tr>
    <td class=calcpict>-40</td>
    <td class=calcpict>50</td>
    <td class=calcpict>60</td>
  </tr>
  <tr>
    <td class=calcpict>70</td>
    <td class=calcpict>?</td>
    <td class=calcpict>90</td>
  </tr>
</table>
</td>
<td>
<table class=calcpict cellspacing="0" cellpadding="0">
  <tr>
    <td class=calcpict>1</td>
    <td class=calcpict>2</td>
    <td class=calcpict>3</td>
  </tr>
  <tr>
    <td class=calcpict>4</td>
    <td class=calcpict>0</td>
    <td class=calcpict>-1</td>
  </tr>
  <tr>
    <td class=calcpict>?</td>
    <td class=calcpict>-2</td>
    <td class=calcpict>-3</td>
  </tr>
</table>
</td>
<td>
<table class=calcpict cellspacing="0" cellpadding="0">
  <tr>
    <td class=calcpict>11</td>
    <td class=calcpict>22</td>
    <td class=calcpict>33</td>
  </tr>
  <tr>
    <td class=calcpict>-36</td>
    <td class=calcpict>50</td>
    <td class=calcpict>59</td>
  </tr>
  <tr>
    <td class=calcpict>?</td>
    <td class=calcpict>?</td>
    <td class=calcpict>87</td>
  </tr>
</table>
</td>
</tr>
</table>

<p class=kopje>TabCalc example:</p>
<p class=calc00>OutCol = InColA + InColB</p>
<p class=emptyline>&nbsp;</p>
<table cellspacing=0>
<tr>
	<td valign="top"><p class=tcolhr>InColA</p></td>
	<td valign="top"><p class=tcolhr>InColB</p></td>
	<td valign="top"><p class=tcolhr>OutCol</p></td>
</tr>
<tr>
	<td valign="top"><p class=t1r>10</p></td>
	<td valign="top"><p class=t1r>1</p></td>
	<td valign="top"><p class=t1r>11</p></td>
</tr>
<tr>
	<td valign="top"><p class=t1r>20</p></td>
	<td valign="top"><p class=t1r>2</p></td>
	<td valign="top"><p class=t1r>22</p></td>
</tr>
<tr>
	<td valign="top"><p class=t1r>30</p></td>
	<td valign="top"><p class=t1r>3</p></td>
	<td valign="top"><p class=t1r>33</p></td>
</tr>
<tr>
	<td valign="top"><p class=t1r>-40</p></td>
	<td valign="top"><p class=t1r>4</p></td>
	<td valign="top"><p class=t1r>-36</p></td>
</tr>
<tr>
	<td valign="top"><p class=t1r>50</p></td>
	<td valign="top"><p class=t1r>0</p></td>
	<td valign="top"><p class=t1r>50</p></td>
</tr>
<tr>
	<td valign="top"><p class=t1r>60</p></td>
	<td valign="top"><p class=t1r>-1</p></td>
	<td valign="top"><p class=t1r>59</p></td>
</tr>
<tr>
	<td valign="top"><p class=t1r>70</p></td>
	<td valign="top"><p class=t1r>?</p></td>
	<td valign="top"><p class=t1r>?</p></td>
</tr>
<tr>
	<td valign="top"><p class=t1r>?</p></td>
	<td valign="top"><p class=t1r>-2</p></td>
	<td valign="top"><p class=t1r>?</p></td>
</tr>
<tr>
	<td valign="top"><p class=t1r>90</p></td>
	<td valign="top"><p class=t1r>-3</p></td>
	<td valign="top"><p class=t1r>87</p></td>
</tr>
</table>

<p class=kopje><a name="Applied example">Applied example</a>: concatenation operator</p>
<p class=calc0>Combined = Terrain + LandUse</p>
<p class=emptyline>&nbsp;</p>
<table cellspacing=0>
<tr>
	<td valign="top"><p class=tcolh>Terrain</p></td>
	<td valign="top"><p class=tcolh>DescrTerrain</p></td>
	<td valign="top"><p class=tcolh>Landuse</p></td>
	<td valign="top"><p class=tcolh>DescrLanduse</p></td>
	<td valign="top"><p class=tcolh>Combined</p></td>
</tr>
<tr>
	<td valign="top"><p class=t1>C2</p></td>
	<td valign="top"><p class=t1>LagoonPlain</p></td>
	<td valign="top"><p class=t1>Pr</p></td>
	<td valign="top"><p class=t1>PaddyRiceRain</p></td>
	<td valign="top"><p class=t1>C2Pr</p></td>
</tr>
<tr>
	<td valign="top"><p class=t1>F</p></td>
	<td valign="top"><p class=t1>CollFootslope</p></td>
	<td valign="top"><p class=t1>H</p></td>
	<td valign="top"><p class=t1>HomesteadGarden</p></td>
	<td valign="top"><p class=t1>FH</p></td>
</tr>
<tr>
	<td valign="top"><p class=t1>H1</p></td>
	<td valign="top"><p class=t1>VolcHillsMod</p></td>
	<td valign="top"><p class=t1>Fb</p></td>
	<td valign="top"><p class=t1>SecForest</p></td>
	<td valign="top"><p class=t1>H1Fb</p></td>
</tr>
<tr>
	<td valign="top"><p class=t1>H1</p></td>
	<td valign="top"><p class=t1>VolcHillsMod</p></td>
	<td valign="top"><p class=t1>G</p></td>
	<td valign="top"><p class=t1>Grazing</p></td>
	<td valign="top"><p class=t1>H1G</p></td>
</tr>
<tr>
	<td valign="top"><p class=t1>H1</p></td>
	<td valign="top"><p class=t1>VolcHillsMod</p></td>
	<td valign="top"><p class=t1>Ut</p></td>
	<td valign="top"><p class=t1>UplandCropsTrees</p></td>
	<td valign="top"><p class=t1>H1Ut</p></td>
</tr>
<tr>
	<td valign="top"><p class=t1>H2</p></td>
	<td valign="top"><p class=t1>VolcHillsSteep</p></td>
	<td valign="top"><p class=t1>Fp</p></td>
	<td valign="top"><p class=t1>PrimForest</p></td>
	<td valign="top"><p class=t1>H2Fp</p></td>
</tr>
<tr>
	<td valign="top"><p class=t1>H2</p></td>
	<td valign="top"><p class=t1>VolcHillsSteep</p></td>
	<td valign="top"><p class=t1>Ut</p></td>
	<td valign="top"><p class=t1>UplandCropsTrees</p></td>
	<td valign="top"><p class=t1>H2Ut</p></td>
</tr>
<tr>
	<td valign="top"><p class=t1>U1</p></td>
	<td valign="top"><p class=t1>CoastUplandFlat</p></td>
	<td valign="top"><p class=t1>G</p></td>
	<td valign="top"><p class=t1>Grazing</p></td>
	<td valign="top"><p class=t1>U1G</p></td>
</tr>
<tr>
	<td valign="top"><p class=t1>U1</p></td>
	<td valign="top"><p class=t1>CoastUplandFlat</p></td>
	<td valign="top"><p class=t1>H</p></td>
	<td valign="top"><p class=t1>HomesteadGarden</p></td>
	<td valign="top"><p class=t1>U1H</p></td>
</tr>
<tr>
	<td valign="top"><p class=t1>U2</p></td>
	<td valign="top"><p class=t1>CoastUplandMod</p></td>
	<td valign="top"><p class=t1>G</p></td>
	<td valign="top"><p class=t1>Grazing</p></td>
	<td valign="top"><p class=t1>U2G</p></td>
</tr>
<tr>
	<td valign="top"><p class=t1>U2</p></td>
	<td valign="top"><p class=t1>CoastUplandMod</p></td>
	<td valign="top"><p class=t1>Tu</p></td>
	<td valign="top"><p class=t1>TreeCrops</p></td>
	<td valign="top"><p class=t1>U2Tu</p></td>
</tr>
<tr>
	<td valign="top"><p class=t1>U4</p></td>
	<td valign="top"><p class=t1>CoastUplandSteep</p></td>
	<td valign="top"><p class=t1>Tu</p></td>
	<td valign="top"><p class=t1>TreeCrops</p></td>
	<td valign="top"><p class=t1>U4Tu</p></td>
</tr>
<tr>
	<td valign="top"><p class=t1>V1</p></td>
	<td valign="top"><p class=t1>InfilledValleys</p></td>
	<td valign="top"><p class=t1>H</p></td>
	<td valign="top"><p class=t1>HomesteadGarden</p></td>
	<td valign="top"><p class=t1>V1H</p></td>
</tr>
<tr>
	<td valign="top"><p class=t1>V1</p></td>
	<td valign="top"><p class=t1>InfilledValleys</p></td>
	<td valign="top"><p class=t1>Pi</p></td>
	<td valign="top"><p class=t1>PaddyRiceIrr</p></td>
	<td valign="top"><p class=t1>V1Pi</p></td>
</tr>
<tr>
	<td valign="top"><p class=t1>V2</p></td>
	<td valign="top"><p class=t1>InfilledLevees</p></td>
	<td valign="top"><p class=t1>H</p></td>
	<td valign="top"><p class=t1>HomesteadGarden</p></td>
	<td valign="top"><p class=t1>V2H</p></td>
</tr>
</table>

<p class=defnewpar>The expression results in a column <span class=courier>Combined</span> which contains a combination of the class names in columns <span class=courier>Terrain</span> and <span class=courier>LandUse</span>.</p>

<p class=Seealso>See also:</p>
<table cellspacing=0>
<tr>
	<td valign="top" width="50"><a href="calc_subtraction_operator.htm">-</a></td>
	<td valign="top"><a href="calc_exponential_operator.htm">^</a></td>
</tr>
<tr>
	<td valign="top" width="50"><a href="calc_multiplication_operator.htm">*</a></td>
	<td valign="top"><a href="calc_modulus_operator.htm">MOD</a></td>
</tr>
<tr>
	<td valign="top" width="50"><p class=seealsolinks><a href="calc_division_operator.htm">/</a></p></td>
	<td valign="top"><p class=seealsolinks><a href="calc_integer_division_operator.htm">DIV</a></p></td>
</tr>
</table>

</body